@using GoodApp.Data
@using GoodApp.Data.Models
@model GoodApp.Backend.Models.EditChallengeBindingModel
@{
    ViewBag.Title = "Challenges - Add";
    Layout = "~/Views/Shared/SBAdminV2Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header nomargin">@ViewBag.Title</h3>
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        <div class="text-left">
            @using (Html.BeginForm("Create", "Challenge", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(p => p.Type, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control", @type = "number", @min=0 } })
                            @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.FrequencyValue, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FrequencyValue, new { htmlAttributes = new { @class = "form-control", @type = "number", @min=0} })
                            @Html.ValidationMessageFor(model => model.FrequencyValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FrequencyType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(p => p.FrequencyType, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FrequencyCount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FrequencyCount, new { htmlAttributes = new { @class = "form-control", @type = "number", @min=0} })
                            @Html.ValidationMessageFor(model => model.FrequencyCount, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(p => p.Status, new { @class = "form-control" })
                        </div>
                    </div>
                    @{
                        var groups = ViewBag.Groups as List<Group>;
                        if (groups != null)
                        {
                            var groupSelects = groups.Select(p => new SelectListItem() { Text = p.Code + " / Name: " + p.Name, Value = p.GroupId.ToString() });
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupIds, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(p => p.GroupIds, groupSelects, new { @class = "form-control", @multiple = "multiple", @data_multi = "multiselect" })
                                </div>
                            </div>
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="Picture" id="Picture" class="form-control" accept="image/*" />
                            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="col-md-2">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                            <div class="col-md-2">
                                <a href="@ViewBag.ReturnUrl" class="btn btn-primary">Back to List</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>